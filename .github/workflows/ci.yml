name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('rust/Cargo.lock') }}
    
    - name: Install protoc
      uses: arduino/setup-protoc@v2
      with:
        version: '23.x'
    
    - name: Build Rust
      run: cd rust && cargo build --verbose
    
    - name: Run Rust tests
      run: cd rust && cargo test --verbose
    
    - name: Check Rust formatting
      run: cd rust && cargo fmt -- --check
    
    - name: Run Rust clippy
      run: cd rust && cargo clippy -- -D warnings

  go:
    name: Go
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install protoc
      uses: arduino/setup-protoc@v2
      with:
        version: '23.x'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('go/go.sum') }}
    
    - name: Generate Go protobuf code
      run: cd go && make generate
    
    - name: Run Go tests  
      run: cd go && make test
    
    - name: Check Go formatting
      run: cd go && make fmt && git diff --exit-code

  nodejs:
    name: Node.js
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: nodejs/package-lock.json
    
    - name: Install protoc
      uses: arduino/setup-protoc@v2
      with:
        version: '23.x'
    
    - name: Install Node.js dependencies
      run: cd nodejs && npm ci
    
    - name: Generate Node.js protobuf code
      run: cd nodejs && npm run generate
    
    - name: Build Node.js package
      run: cd nodejs && npm run compile
    
    - name: Run Node.js tests
      run: cd nodejs && npm test

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [rust, go, nodejs]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install protoc
      uses: arduino/setup-protoc@v2
      with:
        version: '23.x'
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: nodejs/package-lock.json
    
    - name: Build all packages
      run: make all
    
    - name: Run integration tests
      run: |
        echo "Integration tests would go here"
        echo "Could test interoperability between language versions" 